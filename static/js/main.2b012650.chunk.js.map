{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC1B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAMC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,YACtB,gCACE,6BAAKF,IACL,4BAAIC,WCgBGK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAChB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OACA,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCIIC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,sBACZC,SAAUH,OCEHI,G,MARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,aCeEC,E,kDAlBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,uDAEFG,KAAKX,MAAMK,a,GAfKQ,aC+CVC,E,kDAzCT,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAO,CACVlB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClByB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEvB,OAAQkC,S,oBAOzC,WACE,MAAgCZ,KAAKJ,MAA7BlB,EAAR,EAAQA,OAAQK,EAAhB,EAAgBA,YACV8B,EAAgBnC,EAAOoC,QAAO,SAAApC,GAClC,OAAOA,EAAOP,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAExD,OAAKrC,EAAOuC,OAIV,sBAAK3C,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,6BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACA,cAAC,EAAD,CAAU1B,OAAQmC,WARX,oD,GAzBMX,aCKVgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAAQ,cAAC,EAAD,IAAWC,SAASC,eAAe,SAMpDX,M","file":"static/js/main.2b012650.chunk.js","sourcesContent":["import React from 'react' ;\r\n\r\nconst Card = ({name, email, id}) => {\r\n  return (\r\n    <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'> \r\n      <img  alt='robots' src={`https://robohash.org/${id}?50x40`}  />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card; ","import React from 'react';\r\nimport Card from '../components/Card' ;\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n   return (\r\n    <div>\r\n    {\r\n      robots.map((user, i) => {\r\n     return ( \r\n     <Card\r\n      key={i} \r\n      id={robots[i].id} \r\n      name={robots[i].name} \r\n      email={robots[i].email}\r\n\r\n      />  \r\n     );\r\n    })\r\n    }\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='Search your friends'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","\r\nimport React from 'react' ;\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '2px solid black', height: '500px'}}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Scroll; ","import React, { Component } from 'react' ;\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false \r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n  render () {\r\n    if (this.state.hasError) {\r\n      return <h1>Ups, that is not good</h1>\r\n    }\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry; ","import React, { Component } from 'react' ;\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport './App.css'\r\nimport Scroll from '../components/Scroll'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\n      class  App extends Component  {\r\n        constructor() {\r\n          super()\r\n          this.state= {\r\n            robots: [],\r\n            searchfield: ''\r\n          }\r\n        }\r\n\r\n        componentDidMount() {\r\n          fetch('https://jsonplaceholder.typicode.com/users')\r\n          .then(response=> response.json())\r\n          .then(users => this.setState({ robots: users }));\r\n        } \r\n\r\n        onSearchChange = (event) => {\r\n          this.setState({ searchfield: event.target.value })\r\n        }\r\n        \r\n        render() {\r\n          const { robots, searchfield } = this.state;\r\n          const filterRobots =  robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n          })\r\n          if (!robots.length) {\r\n            return <h1>Loading Robots</h1>\r\n          } else {\r\n            return (\r\n            <div className=\"tc\">\r\n            <h1 className='f1'>RoboFriends    </h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n            <ErrorBoundry>\r\n            <CardList robots={filterRobots} />\r\n            </ErrorBoundry>\r\n            </Scroll>\r\n            </div>\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n  export default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App' ;\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons' ;\n\n\nReactDOM.render( <App /> ,  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}